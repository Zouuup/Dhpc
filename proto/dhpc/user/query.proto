syntax = "proto3";

package dhpc.user;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dhpc/user/params.proto";
import "dhpc/user/linked_requesters.proto";
import "dhpc/user/slash_history.proto";
import "dhpc/user/user.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "Dhpc/x/user/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/Dhpc/user/params";
  
  }
  
  // Queries a list of LinkedRequesters items.
  rpc LinkedRequesters    (QueryGetLinkedRequestersRequest) returns (QueryGetLinkedRequestersResponse) {
    option (google.api.http).get = "/Dhpc/user/linked_requesters/{index}";
  
  }
  rpc LinkedRequestersAll (QueryAllLinkedRequestersRequest) returns (QueryAllLinkedRequestersResponse) {
    option (google.api.http).get = "/Dhpc/user/linked_requesters";
  
  }
  
  // Queries a list of SlashHistory items.
  rpc SlashHistory    (QueryGetSlashHistoryRequest) returns (QueryGetSlashHistoryResponse) {
    option (google.api.http).get = "/Dhpc/user/slash_history/{index}";
  
  }
  rpc SlashHistoryAll (QueryAllSlashHistoryRequest) returns (QueryAllSlashHistoryResponse) {
    option (google.api.http).get = "/Dhpc/user/slash_history";
  
  }
  
  // Queries a list of User items.
  rpc User    (QueryGetUserRequest) returns (QueryGetUserResponse) {
    option (google.api.http).get = "/Dhpc/user/user/{account}";
  
  }
  rpc UserAll (QueryAllUserRequest) returns (QueryAllUserResponse) {
    option (google.api.http).get = "/Dhpc/user/user";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetLinkedRequestersRequest {
  string index = 1;
}

message QueryGetLinkedRequestersResponse {
  LinkedRequesters linkedRequesters = 1 [(gogoproto.nullable) = false];
}

message QueryAllLinkedRequestersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLinkedRequestersResponse {
  repeated LinkedRequesters                       linkedRequesters = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination       = 2;
}

message QueryGetSlashHistoryRequest {
  string index = 1;
}

message QueryGetSlashHistoryResponse {
  SlashHistory slashHistory = 1 [(gogoproto.nullable) = false];
}

message QueryAllSlashHistoryRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSlashHistoryResponse {
  repeated SlashHistory                           slashHistory = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetUserRequest {
  string account = 1;
}

message QueryGetUserResponse {
  User user = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
  repeated User                                   user       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

