syntax = "proto3";

package dhpc.request;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "dhpc/request/params.proto";
import "dhpc/request/allowed_oracles.proto";
import "dhpc/request/miner_response.proto";
import "dhpc/request/request_record.proto";
import "dhpc/request/treasury.proto";

option go_package = "Dhpc/x/request/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/Dhpc/request/params";
  
  }
  
  // Queries a list of AllowedOracles items.
  rpc AllowedOracles    (QueryGetAllowedOraclesRequest) returns (QueryGetAllowedOraclesResponse) {
    option (google.api.http).get = "/Dhpc/request/allowed_oracles/{id}";
  
  }
  rpc AllowedOraclesAll (QueryAllAllowedOraclesRequest) returns (QueryAllAllowedOraclesResponse) {
    option (google.api.http).get = "/Dhpc/request/allowed_oracles";
  
  }
  
  // Queries a list of MinerResponse items.
  rpc MinerResponse    (QueryGetMinerResponseRequest) returns (QueryGetMinerResponseResponse) {
    option (google.api.http).get = "/Dhpc/request/miner_response/{uUID}";
  
  }
  rpc MinerResponseAll (QueryAllMinerResponseRequest) returns (QueryAllMinerResponseResponse) {
    option (google.api.http).get = "/Dhpc/request/miner_response";
  
  }
  
  // Queries a list of RequestRecord items.
  rpc RequestRecord    (QueryGetRequestRecordRequest) returns (QueryGetRequestRecordResponse) {
    option (google.api.http).get = "/Dhpc/request/request_record/{uUID}";
  
  }
  rpc RequestRecordAll (QueryAllRequestRecordRequest) returns (QueryAllRequestRecordResponse) {
    option (google.api.http).get = "/Dhpc/request/request_record";
  
  }
  rpc RequestRecordAllMinerPending (QueryAllRequestRecordRequest) returns (QueryAllRequestRecordResponse) {
    option (google.api.http).get = "/Dhpc/request/request_record_miner_pending";

  }
  rpc RequestRecordAllAnswerPending (QueryAllRequestRecordRequest) returns (QueryAllRequestRecordResponse) {
    option (google.api.http).get = "/Dhpc/request/request_record_answer_pending";

  }
  
  // Queries a Treasury by index.
  rpc Treasury (QueryGetTreasuryRequest) returns (QueryGetTreasuryResponse) {
    option (google.api.http).get = "/Dhpc/request/treasury";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAllowedOraclesRequest {
  uint64 id = 1;
}

message QueryGetAllowedOraclesResponse {
  AllowedOracles AllowedOracles = 1 [(gogoproto.nullable) = false];
}

message QueryAllAllowedOraclesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAllowedOraclesResponse {
  repeated AllowedOracles                         AllowedOracles = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination     = 2;
}

message QueryGetMinerResponseRequest {
  string uUID = 1;
}

message QueryGetMinerResponseResponse {
  MinerResponse minerResponse = 1 [(gogoproto.nullable) = false];
}

message QueryAllMinerResponseRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMinerResponseResponse {
  repeated MinerResponse                          minerResponse = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetRequestRecordRequest {
  string uUID = 1;
}

message QueryGetRequestRecordResponse {
  RequestRecord requestRecord = 1 [(gogoproto.nullable) = false];
}

message QueryAllRequestRecordRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRequestRecordResponse {
  repeated RequestRecord                          requestRecord = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetTreasuryRequest {}

message QueryGetTreasuryResponse {
  Treasury Treasury = 1 [(gogoproto.nullable) = false];
}

