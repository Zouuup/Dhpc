// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: decent/user/user.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Account         string              `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Reputation      int32               `protobuf:"varint,2,opt,name=reputation,proto3" json:"reputation,omitempty"`
	Deposit         []types.Coin        `protobuf:"bytes,3,rep,name=deposit,proto3" json:"deposit"`
	LinkedRequester []*LinkedRequesters `protobuf:"bytes,4,rep,name=linkedRequester,proto3" json:"linkedRequester,omitempty"`
	SlashHistory    []*SlashHistory     `protobuf:"bytes,5,rep,name=slashHistory,proto3" json:"slashHistory,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a04548d6969233, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *User) GetReputation() int32 {
	if m != nil {
		return m.Reputation
	}
	return 0
}

func (m *User) GetDeposit() []types.Coin {
	if m != nil {
		return m.Deposit
	}
	return nil
}

func (m *User) GetLinkedRequester() []*LinkedRequesters {
	if m != nil {
		return m.LinkedRequester
	}
	return nil
}

func (m *User) GetSlashHistory() []*SlashHistory {
	if m != nil {
		return m.SlashHistory
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "decent.user.User")
}

func init() { proto.RegisterFile("decent/user/user.proto", fileDescriptor_15a04548d6969233) }

var fileDescriptor_15a04548d6969233 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x93, 0xfe, 0xa1, 0xc2, 0x45, 0x42, 0x0a, 0x08, 0x85, 0x4a, 0xb8, 0x15, 0x2c, 0x5d,
	0x70, 0x54, 0x98, 0x18, 0x58, 0x0a, 0x12, 0x0c, 0x4c, 0x41, 0x2c, 0x2c, 0x55, 0x9a, 0x9e, 0x5a,
	0x8b, 0xe2, 0x0b, 0x3e, 0x07, 0xd1, 0x99, 0x17, 0xe0, 0xb1, 0x3a, 0x76, 0x64, 0x42, 0xa8, 0x7d,
	0x11, 0xd4, 0x38, 0x95, 0x5c, 0x16, 0xeb, 0xfc, 0xf9, 0x77, 0xf7, 0xf9, 0x3e, 0x76, 0x34, 0x82,
	0x14, 0x94, 0x89, 0x72, 0x02, 0x5d, 0x1c, 0x22, 0xd3, 0x68, 0x30, 0x68, 0x5a, 0x5d, 0xac, 0xa5,
	0xd6, 0x99, 0x0b, 0x4d, 0xa5, 0x7a, 0x81, 0xd1, 0x40, 0xc3, 0x5b, 0x0e, 0x64, 0x40, 0x93, 0xed,
	0x68, 0xb5, 0x5d, 0x88, 0xa6, 0x09, 0x4d, 0x06, 0x13, 0x49, 0x06, 0xf5, 0xac, 0x04, 0x0e, 0xc7,
	0x38, 0xc6, 0xa2, 0x8c, 0xd6, 0x55, 0xa9, 0xf2, 0x14, 0xe9, 0x15, 0x29, 0x1a, 0x26, 0x04, 0xd1,
	0x7b, 0x6f, 0x08, 0x26, 0xe9, 0x45, 0x29, 0x4a, 0x65, 0xdf, 0x4f, 0x3f, 0x2b, 0xac, 0xf6, 0x44,
	0xa0, 0x83, 0x90, 0x35, 0x92, 0x34, 0xc5, 0x5c, 0x99, 0xd0, 0xef, 0xf8, 0xdd, 0xdd, 0x78, 0x73,
	0x0d, 0x38, 0x63, 0x1a, 0xb2, 0xdc, 0x24, 0x46, 0xa2, 0x0a, 0x2b, 0x1d, 0xbf, 0x5b, 0x8f, 0x1d,
	0x25, 0xb8, 0x62, 0x8d, 0x11, 0x64, 0x48, 0xd2, 0x84, 0xd5, 0x4e, 0xb5, 0xdb, 0xbc, 0x38, 0x16,
	0xd6, 0x54, 0xac, 0x4d, 0x45, 0x69, 0x2a, 0x6e, 0x50, 0xaa, 0x7e, 0x6d, 0xfe, 0xd3, 0xf6, 0xe2,
	0x0d, 0x1f, 0xdc, 0xb1, 0x7d, 0xbb, 0x6f, 0xbc, 0x59, 0x37, 0xac, 0x15, 0x23, 0x4e, 0x84, 0x13,
	0x90, 0x78, 0xd8, 0x66, 0x28, 0xfe, 0xdf, 0x15, 0x5c, 0xb3, 0xbd, 0x22, 0x93, 0x7b, 0x1b, 0x49,
	0x58, 0x2f, 0x3f, 0xe2, 0x4e, 0x79, 0x74, 0x80, 0x78, 0x0b, 0xef, 0x9f, 0xcf, 0x97, 0xdc, 0x5f,
	0x2c, 0xb9, 0xff, 0xbb, 0xe4, 0xfe, 0xd7, 0x8a, 0x7b, 0x8b, 0x15, 0xf7, 0xbe, 0x57, 0xdc, 0x7b,
	0x3e, 0xb8, 0xb5, 0xb1, 0x7f, 0xd8, 0xe0, 0xcd, 0x2c, 0x03, 0x1a, 0xee, 0x14, 0xd9, 0x5d, 0xfe,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x8f, 0xbe, 0xed, 0xde, 0x01, 0x00, 0x00,
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SlashHistory) > 0 {
		for iNdEx := len(m.SlashHistory) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.SlashHistory[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintUser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.LinkedRequester) > 0 {
		for iNdEx := len(m.LinkedRequester) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedRequester[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintUser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Deposit) > 0 {
		for iNdEx := len(m.Deposit) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Deposit[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintUser(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Reputation != 0 {
		i = encodeVarintUser(dAtA, i, uint64(m.Reputation))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintUser(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintUser(dAtA []byte, offset int, v uint64) int {
	offset -= sovUser(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovUser(uint64(l))
	}
	if m.Reputation != 0 {
		n += 1 + sovUser(uint64(m.Reputation))
	}
	if len(m.Deposit) > 0 {
		for _, e := range m.Deposit {
			l = e.Size()
			n += 1 + l + sovUser(uint64(l))
		}
	}
	if len(m.LinkedRequester) > 0 {
		for _, e := range m.LinkedRequester {
			l = e.Size()
			n += 1 + l + sovUser(uint64(l))
		}
	}
	if len(m.SlashHistory) > 0 {
		for _, e := range m.SlashHistory {
			l = e.Size()
			n += 1 + l + sovUser(uint64(l))
		}
	}
	return n
}

func sovUser(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUser(x uint64) (n int) {
	return sovUser(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reputation", wireType)
			}
			m.Reputation = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reputation |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deposit = append(m.Deposit, types.Coin{})
			if err := m.Deposit[len(m.Deposit)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedRequester", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedRequester = append(m.LinkedRequester, &LinkedRequesters{})
			if err := m.LinkedRequester[len(m.LinkedRequester)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlashHistory", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUser
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SlashHistory = append(m.SlashHistory, &SlashHistory{})
			if err := m.SlashHistory[len(m.SlashHistory)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUser
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUser
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUser
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUser        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUser          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUser = fmt.Errorf("proto: unexpected end of group")
)
