// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dhpc/request/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateAllowedOracles struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateAllowedOracles) Reset()         { *m = MsgCreateAllowedOracles{} }
func (m *MsgCreateAllowedOracles) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAllowedOracles) ProtoMessage()    {}
func (*MsgCreateAllowedOracles) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{0}
}
func (m *MsgCreateAllowedOracles) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAllowedOracles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAllowedOracles.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAllowedOracles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAllowedOracles.Merge(m, src)
}
func (m *MsgCreateAllowedOracles) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAllowedOracles) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAllowedOracles.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAllowedOracles proto.InternalMessageInfo

func (m *MsgCreateAllowedOracles) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAllowedOracles) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateAllowedOracles) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateAllowedOraclesResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateAllowedOraclesResponse) Reset()         { *m = MsgCreateAllowedOraclesResponse{} }
func (m *MsgCreateAllowedOraclesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAllowedOraclesResponse) ProtoMessage()    {}
func (*MsgCreateAllowedOraclesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{1}
}
func (m *MsgCreateAllowedOraclesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAllowedOraclesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAllowedOraclesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAllowedOraclesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAllowedOraclesResponse.Merge(m, src)
}
func (m *MsgCreateAllowedOraclesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAllowedOraclesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAllowedOraclesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAllowedOraclesResponse proto.InternalMessageInfo

func (m *MsgCreateAllowedOraclesResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateAllowedOracles struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateAllowedOracles) Reset()         { *m = MsgUpdateAllowedOracles{} }
func (m *MsgUpdateAllowedOracles) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAllowedOracles) ProtoMessage()    {}
func (*MsgUpdateAllowedOracles) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{2}
}
func (m *MsgUpdateAllowedOracles) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAllowedOracles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAllowedOracles.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAllowedOracles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAllowedOracles.Merge(m, src)
}
func (m *MsgUpdateAllowedOracles) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAllowedOracles) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAllowedOracles.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAllowedOracles proto.InternalMessageInfo

func (m *MsgUpdateAllowedOracles) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAllowedOracles) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateAllowedOracles) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateAllowedOracles) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateAllowedOraclesResponse struct {
}

func (m *MsgUpdateAllowedOraclesResponse) Reset()         { *m = MsgUpdateAllowedOraclesResponse{} }
func (m *MsgUpdateAllowedOraclesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAllowedOraclesResponse) ProtoMessage()    {}
func (*MsgUpdateAllowedOraclesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{3}
}
func (m *MsgUpdateAllowedOraclesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAllowedOraclesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAllowedOraclesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAllowedOraclesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAllowedOraclesResponse.Merge(m, src)
}
func (m *MsgUpdateAllowedOraclesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAllowedOraclesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAllowedOraclesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAllowedOraclesResponse proto.InternalMessageInfo

type MsgDeleteAllowedOracles struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteAllowedOracles) Reset()         { *m = MsgDeleteAllowedOracles{} }
func (m *MsgDeleteAllowedOracles) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAllowedOracles) ProtoMessage()    {}
func (*MsgDeleteAllowedOracles) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{4}
}
func (m *MsgDeleteAllowedOracles) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAllowedOracles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAllowedOracles.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAllowedOracles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAllowedOracles.Merge(m, src)
}
func (m *MsgDeleteAllowedOracles) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAllowedOracles) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAllowedOracles.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAllowedOracles proto.InternalMessageInfo

func (m *MsgDeleteAllowedOracles) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteAllowedOracles) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteAllowedOraclesResponse struct {
}

func (m *MsgDeleteAllowedOraclesResponse) Reset()         { *m = MsgDeleteAllowedOraclesResponse{} }
func (m *MsgDeleteAllowedOraclesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAllowedOraclesResponse) ProtoMessage()    {}
func (*MsgDeleteAllowedOraclesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{5}
}
func (m *MsgDeleteAllowedOraclesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAllowedOraclesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAllowedOraclesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAllowedOraclesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAllowedOraclesResponse.Merge(m, src)
}
func (m *MsgDeleteAllowedOraclesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAllowedOraclesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAllowedOraclesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAllowedOraclesResponse proto.InternalMessageInfo

type MsgCreateMinerResponse struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID        string `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
	RequestUUID string `protobuf:"bytes,3,opt,name=requestUUID,proto3" json:"requestUUID,omitempty"`
	Hash        string `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	Answer      int32  `protobuf:"varint,5,opt,name=answer,proto3" json:"answer,omitempty"`
	DataUsed    string `protobuf:"bytes,6,opt,name=dataUsed,proto3" json:"dataUsed,omitempty"`
}

func (m *MsgCreateMinerResponse) Reset()         { *m = MsgCreateMinerResponse{} }
func (m *MsgCreateMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMinerResponse) ProtoMessage()    {}
func (*MsgCreateMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{6}
}
func (m *MsgCreateMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMinerResponse.Merge(m, src)
}
func (m *MsgCreateMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMinerResponse proto.InternalMessageInfo

func (m *MsgCreateMinerResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateMinerResponse) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MsgCreateMinerResponse) GetRequestUUID() string {
	if m != nil {
		return m.RequestUUID
	}
	return ""
}

func (m *MsgCreateMinerResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *MsgCreateMinerResponse) GetAnswer() int32 {
	if m != nil {
		return m.Answer
	}
	return 0
}

func (m *MsgCreateMinerResponse) GetDataUsed() string {
	if m != nil {
		return m.DataUsed
	}
	return ""
}

type MsgCreateMinerResponseResponse struct {
}

func (m *MsgCreateMinerResponseResponse) Reset()         { *m = MsgCreateMinerResponseResponse{} }
func (m *MsgCreateMinerResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateMinerResponseResponse) ProtoMessage()    {}
func (*MsgCreateMinerResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{7}
}
func (m *MsgCreateMinerResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateMinerResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateMinerResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateMinerResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateMinerResponseResponse.Merge(m, src)
}
func (m *MsgCreateMinerResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateMinerResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateMinerResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateMinerResponseResponse proto.InternalMessageInfo

type MsgUpdateMinerResponse struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID        string `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
	RequestUUID string `protobuf:"bytes,3,opt,name=requestUUID,proto3" json:"requestUUID,omitempty"`
	Answer      int32  `protobuf:"varint,5,opt,name=answer,proto3" json:"answer,omitempty"`
	Salt        int32  `protobuf:"varint,7,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (m *MsgUpdateMinerResponse) Reset()         { *m = MsgUpdateMinerResponse{} }
func (m *MsgUpdateMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMinerResponse) ProtoMessage()    {}
func (*MsgUpdateMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{8}
}
func (m *MsgUpdateMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMinerResponse.Merge(m, src)
}
func (m *MsgUpdateMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMinerResponse proto.InternalMessageInfo

func (m *MsgUpdateMinerResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateMinerResponse) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MsgUpdateMinerResponse) GetRequestUUID() string {
	if m != nil {
		return m.RequestUUID
	}
	return ""
}

func (m *MsgUpdateMinerResponse) GetAnswer() int32 {
	if m != nil {
		return m.Answer
	}
	return 0
}

func (m *MsgUpdateMinerResponse) GetSalt() int32 {
	if m != nil {
		return m.Salt
	}
	return 0
}

type MsgUpdateMinerResponseResponse struct {
}

func (m *MsgUpdateMinerResponseResponse) Reset()         { *m = MsgUpdateMinerResponseResponse{} }
func (m *MsgUpdateMinerResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMinerResponseResponse) ProtoMessage()    {}
func (*MsgUpdateMinerResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{9}
}
func (m *MsgUpdateMinerResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMinerResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMinerResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMinerResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMinerResponseResponse.Merge(m, src)
}
func (m *MsgUpdateMinerResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMinerResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMinerResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMinerResponseResponse proto.InternalMessageInfo

type MsgDeleteMinerResponse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID    string `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
}

func (m *MsgDeleteMinerResponse) Reset()         { *m = MsgDeleteMinerResponse{} }
func (m *MsgDeleteMinerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMinerResponse) ProtoMessage()    {}
func (*MsgDeleteMinerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{10}
}
func (m *MsgDeleteMinerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMinerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMinerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMinerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMinerResponse.Merge(m, src)
}
func (m *MsgDeleteMinerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMinerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMinerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMinerResponse proto.InternalMessageInfo

func (m *MsgDeleteMinerResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMinerResponse) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type MsgDeleteMinerResponseResponse struct {
}

func (m *MsgDeleteMinerResponseResponse) Reset()         { *m = MsgDeleteMinerResponseResponse{} }
func (m *MsgDeleteMinerResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMinerResponseResponse) ProtoMessage()    {}
func (*MsgDeleteMinerResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{11}
}
func (m *MsgDeleteMinerResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMinerResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMinerResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMinerResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMinerResponseResponse.Merge(m, src)
}
func (m *MsgDeleteMinerResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMinerResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMinerResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMinerResponseResponse proto.InternalMessageInfo

type MsgCreateRequestRecord struct {
	Creator string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID    string         `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
	TXhash  string         `protobuf:"bytes,3,opt,name=tXhash,proto3" json:"tXhash,omitempty"`
	Network string         `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	From    string         `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Address string         `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Score   int32          `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	Oracle  string         `protobuf:"bytes,8,opt,name=oracle,proto3" json:"oracle,omitempty"`
	Block   int32          `protobuf:"varint,9,opt,name=block,proto3" json:"block,omitempty"`
	Stage   int32          `protobuf:"varint,10,opt,name=stage,proto3" json:"stage,omitempty"`
	Miners  *MinerResponse `protobuf:"bytes,11,opt,name=miners,proto3" json:"miners,omitempty"`
}

func (m *MsgCreateRequestRecord) Reset()         { *m = MsgCreateRequestRecord{} }
func (m *MsgCreateRequestRecord) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequestRecord) ProtoMessage()    {}
func (*MsgCreateRequestRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{12}
}
func (m *MsgCreateRequestRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequestRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequestRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequestRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequestRecord.Merge(m, src)
}
func (m *MsgCreateRequestRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequestRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequestRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequestRecord proto.InternalMessageInfo

func (m *MsgCreateRequestRecord) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetTXhash() string {
	if m != nil {
		return m.TXhash
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *MsgCreateRequestRecord) GetOracle() string {
	if m != nil {
		return m.Oracle
	}
	return ""
}

func (m *MsgCreateRequestRecord) GetBlock() int32 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *MsgCreateRequestRecord) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *MsgCreateRequestRecord) GetMiners() *MinerResponse {
	if m != nil {
		return m.Miners
	}
	return nil
}

type MsgCreateRequestRecordResponse struct {
}

func (m *MsgCreateRequestRecordResponse) Reset()         { *m = MsgCreateRequestRecordResponse{} }
func (m *MsgCreateRequestRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequestRecordResponse) ProtoMessage()    {}
func (*MsgCreateRequestRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{13}
}
func (m *MsgCreateRequestRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequestRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequestRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequestRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequestRecordResponse.Merge(m, src)
}
func (m *MsgCreateRequestRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequestRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequestRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequestRecordResponse proto.InternalMessageInfo

type MsgUpdateRequestRecord struct {
	Creator string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID    string         `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
	TXhash  string         `protobuf:"bytes,3,opt,name=tXhash,proto3" json:"tXhash,omitempty"`
	Network string         `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	From    string         `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Address string         `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Score   int32          `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	Oracle  string         `protobuf:"bytes,8,opt,name=oracle,proto3" json:"oracle,omitempty"`
	Block   int32          `protobuf:"varint,9,opt,name=block,proto3" json:"block,omitempty"`
	Stage   int32          `protobuf:"varint,10,opt,name=stage,proto3" json:"stage,omitempty"`
	Miners  *MinerResponse `protobuf:"bytes,11,opt,name=miners,proto3" json:"miners,omitempty"`
}

func (m *MsgUpdateRequestRecord) Reset()         { *m = MsgUpdateRequestRecord{} }
func (m *MsgUpdateRequestRecord) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRequestRecord) ProtoMessage()    {}
func (*MsgUpdateRequestRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{14}
}
func (m *MsgUpdateRequestRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRequestRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRequestRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRequestRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRequestRecord.Merge(m, src)
}
func (m *MsgUpdateRequestRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRequestRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRequestRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRequestRecord proto.InternalMessageInfo

func (m *MsgUpdateRequestRecord) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetTXhash() string {
	if m != nil {
		return m.TXhash
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *MsgUpdateRequestRecord) GetOracle() string {
	if m != nil {
		return m.Oracle
	}
	return ""
}

func (m *MsgUpdateRequestRecord) GetBlock() int32 {
	if m != nil {
		return m.Block
	}
	return 0
}

func (m *MsgUpdateRequestRecord) GetStage() int32 {
	if m != nil {
		return m.Stage
	}
	return 0
}

func (m *MsgUpdateRequestRecord) GetMiners() *MinerResponse {
	if m != nil {
		return m.Miners
	}
	return nil
}

type MsgUpdateRequestRecordResponse struct {
}

func (m *MsgUpdateRequestRecordResponse) Reset()         { *m = MsgUpdateRequestRecordResponse{} }
func (m *MsgUpdateRequestRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRequestRecordResponse) ProtoMessage()    {}
func (*MsgUpdateRequestRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{15}
}
func (m *MsgUpdateRequestRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRequestRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRequestRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRequestRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRequestRecordResponse.Merge(m, src)
}
func (m *MsgUpdateRequestRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRequestRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRequestRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRequestRecordResponse proto.InternalMessageInfo

type MsgDeleteRequestRecord struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	UUID    string `protobuf:"bytes,2,opt,name=uUID,proto3" json:"uUID,omitempty"`
}

func (m *MsgDeleteRequestRecord) Reset()         { *m = MsgDeleteRequestRecord{} }
func (m *MsgDeleteRequestRecord) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRequestRecord) ProtoMessage()    {}
func (*MsgDeleteRequestRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{16}
}
func (m *MsgDeleteRequestRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRequestRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRequestRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRequestRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRequestRecord.Merge(m, src)
}
func (m *MsgDeleteRequestRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRequestRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRequestRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRequestRecord proto.InternalMessageInfo

func (m *MsgDeleteRequestRecord) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRequestRecord) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type MsgDeleteRequestRecordResponse struct {
}

func (m *MsgDeleteRequestRecordResponse) Reset()         { *m = MsgDeleteRequestRecordResponse{} }
func (m *MsgDeleteRequestRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRequestRecordResponse) ProtoMessage()    {}
func (*MsgDeleteRequestRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{17}
}
func (m *MsgDeleteRequestRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRequestRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRequestRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRequestRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRequestRecordResponse.Merge(m, src)
}
func (m *MsgDeleteRequestRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRequestRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRequestRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRequestRecordResponse proto.InternalMessageInfo

type MsgCreateTreasury struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateTreasury) Reset()         { *m = MsgCreateTreasury{} }
func (m *MsgCreateTreasury) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTreasury) ProtoMessage()    {}
func (*MsgCreateTreasury) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{18}
}
func (m *MsgCreateTreasury) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTreasury) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTreasury.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTreasury) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTreasury.Merge(m, src)
}
func (m *MsgCreateTreasury) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTreasury) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTreasury.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTreasury proto.InternalMessageInfo

func (m *MsgCreateTreasury) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTreasury) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateTreasuryResponse struct {
}

func (m *MsgCreateTreasuryResponse) Reset()         { *m = MsgCreateTreasuryResponse{} }
func (m *MsgCreateTreasuryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTreasuryResponse) ProtoMessage()    {}
func (*MsgCreateTreasuryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{19}
}
func (m *MsgCreateTreasuryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTreasuryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTreasuryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTreasuryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTreasuryResponse.Merge(m, src)
}
func (m *MsgCreateTreasuryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTreasuryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTreasuryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTreasuryResponse proto.InternalMessageInfo

type MsgUpdateTreasury struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateTreasury) Reset()         { *m = MsgUpdateTreasury{} }
func (m *MsgUpdateTreasury) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTreasury) ProtoMessage()    {}
func (*MsgUpdateTreasury) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{20}
}
func (m *MsgUpdateTreasury) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTreasury) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTreasury.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTreasury) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTreasury.Merge(m, src)
}
func (m *MsgUpdateTreasury) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTreasury) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTreasury.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTreasury proto.InternalMessageInfo

func (m *MsgUpdateTreasury) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTreasury) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateTreasuryResponse struct {
}

func (m *MsgUpdateTreasuryResponse) Reset()         { *m = MsgUpdateTreasuryResponse{} }
func (m *MsgUpdateTreasuryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTreasuryResponse) ProtoMessage()    {}
func (*MsgUpdateTreasuryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{21}
}
func (m *MsgUpdateTreasuryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTreasuryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTreasuryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTreasuryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTreasuryResponse.Merge(m, src)
}
func (m *MsgUpdateTreasuryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTreasuryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTreasuryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTreasuryResponse proto.InternalMessageInfo

type MsgDeleteTreasury struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeleteTreasury) Reset()         { *m = MsgDeleteTreasury{} }
func (m *MsgDeleteTreasury) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTreasury) ProtoMessage()    {}
func (*MsgDeleteTreasury) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{22}
}
func (m *MsgDeleteTreasury) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTreasury) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTreasury.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTreasury) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTreasury.Merge(m, src)
}
func (m *MsgDeleteTreasury) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTreasury) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTreasury.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTreasury proto.InternalMessageInfo

func (m *MsgDeleteTreasury) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeleteTreasuryResponse struct {
}

func (m *MsgDeleteTreasuryResponse) Reset()         { *m = MsgDeleteTreasuryResponse{} }
func (m *MsgDeleteTreasuryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTreasuryResponse) ProtoMessage()    {}
func (*MsgDeleteTreasuryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3f8e49447c6a90, []int{23}
}
func (m *MsgDeleteTreasuryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTreasuryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTreasuryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTreasuryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTreasuryResponse.Merge(m, src)
}
func (m *MsgDeleteTreasuryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTreasuryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTreasuryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTreasuryResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateAllowedOracles)(nil), "dhpc.request.MsgCreateAllowedOracles")
	proto.RegisterType((*MsgCreateAllowedOraclesResponse)(nil), "dhpc.request.MsgCreateAllowedOraclesResponse")
	proto.RegisterType((*MsgUpdateAllowedOracles)(nil), "dhpc.request.MsgUpdateAllowedOracles")
	proto.RegisterType((*MsgUpdateAllowedOraclesResponse)(nil), "dhpc.request.MsgUpdateAllowedOraclesResponse")
	proto.RegisterType((*MsgDeleteAllowedOracles)(nil), "dhpc.request.MsgDeleteAllowedOracles")
	proto.RegisterType((*MsgDeleteAllowedOraclesResponse)(nil), "dhpc.request.MsgDeleteAllowedOraclesResponse")
	proto.RegisterType((*MsgCreateMinerResponse)(nil), "dhpc.request.MsgCreateMinerResponse")
	proto.RegisterType((*MsgCreateMinerResponseResponse)(nil), "dhpc.request.MsgCreateMinerResponseResponse")
	proto.RegisterType((*MsgUpdateMinerResponse)(nil), "dhpc.request.MsgUpdateMinerResponse")
	proto.RegisterType((*MsgUpdateMinerResponseResponse)(nil), "dhpc.request.MsgUpdateMinerResponseResponse")
	proto.RegisterType((*MsgDeleteMinerResponse)(nil), "dhpc.request.MsgDeleteMinerResponse")
	proto.RegisterType((*MsgDeleteMinerResponseResponse)(nil), "dhpc.request.MsgDeleteMinerResponseResponse")
	proto.RegisterType((*MsgCreateRequestRecord)(nil), "dhpc.request.MsgCreateRequestRecord")
	proto.RegisterType((*MsgCreateRequestRecordResponse)(nil), "dhpc.request.MsgCreateRequestRecordResponse")
	proto.RegisterType((*MsgUpdateRequestRecord)(nil), "dhpc.request.MsgUpdateRequestRecord")
	proto.RegisterType((*MsgUpdateRequestRecordResponse)(nil), "dhpc.request.MsgUpdateRequestRecordResponse")
	proto.RegisterType((*MsgDeleteRequestRecord)(nil), "dhpc.request.MsgDeleteRequestRecord")
	proto.RegisterType((*MsgDeleteRequestRecordResponse)(nil), "dhpc.request.MsgDeleteRequestRecordResponse")
	proto.RegisterType((*MsgCreateTreasury)(nil), "dhpc.request.MsgCreateTreasury")
	proto.RegisterType((*MsgCreateTreasuryResponse)(nil), "dhpc.request.MsgCreateTreasuryResponse")
	proto.RegisterType((*MsgUpdateTreasury)(nil), "dhpc.request.MsgUpdateTreasury")
	proto.RegisterType((*MsgUpdateTreasuryResponse)(nil), "dhpc.request.MsgUpdateTreasuryResponse")
	proto.RegisterType((*MsgDeleteTreasury)(nil), "dhpc.request.MsgDeleteTreasury")
	proto.RegisterType((*MsgDeleteTreasuryResponse)(nil), "dhpc.request.MsgDeleteTreasuryResponse")
}

func init() { proto.RegisterFile("dhpc/request/tx.proto", fileDescriptor_0f3f8e49447c6a90) }

var fileDescriptor_0f3f8e49447c6a90 = []byte{
	// 778 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0xc6, 0x21, 0x04, 0xb2, 0x54, 0x48, 0xdd, 0xa6, 0xd4, 0x0d, 0x92, 0x13, 0x22, 0xaa, 0x72,
	0x28, 0x41, 0x85, 0x27, 0x68, 0x41, 0xad, 0x7a, 0x40, 0x95, 0xac, 0x46, 0xaa, 0xb8, 0xa0, 0xc5,
	0xde, 0x42, 0x84, 0x89, 0xc3, 0xae, 0x11, 0xf0, 0x16, 0x3d, 0xf4, 0x41, 0x7a, 0xe9, 0x3b, 0xf4,
	0xc8, 0xb1, 0xc7, 0x0a, 0xd4, 0xf7, 0xa8, 0xf6, 0xc7, 0xc6, 0x6b, 0x66, 0x6d, 0x52, 0xda, 0x5b,
	0x4f, 0xf1, 0x6c, 0xbe, 0xcc, 0xf7, 0xcd, 0x37, 0xd9, 0x19, 0x19, 0x3d, 0x0e, 0x0f, 0xc7, 0xc1,
	0x3a, 0xa3, 0x27, 0xa7, 0x94, 0x27, 0xeb, 0xc9, 0x79, 0x7f, 0xcc, 0xe2, 0x24, 0xc6, 0x0f, 0xc4,
	0x71, 0x5f, 0x1f, 0xb7, 0x7b, 0x06, 0x88, 0x44, 0x51, 0x7c, 0x46, 0xc3, 0xbd, 0x98, 0x91, 0x20,
	0xa2, 0x5c, 0xfd, 0xa2, 0xbd, 0x6c, 0x60, 0x8e, 0x87, 0x23, 0xca, 0xf6, 0x18, 0xe5, 0xe3, 0x78,
	0xc4, 0x29, 0x08, 0xd1, 0x9f, 0x7b, 0x8c, 0x06, 0x31, 0x0b, 0x35, 0x64, 0xc9, 0x94, 0xc3, 0x28,
	0xe1, 0xa7, 0xec, 0x42, 0x7d, 0xd9, 0x23, 0xe8, 0xc9, 0x0e, 0x3f, 0xd8, 0x62, 0x94, 0x24, 0xf4,
	0x95, 0x12, 0xf1, 0x5e, 0x69, 0xc0, 0x2e, 0x9a, 0x0d, 0xc4, 0x79, 0xcc, 0x5c, 0xa7, 0xeb, 0xac,
	0x36, 0xfd, 0x34, 0xc4, 0x18, 0xd5, 0x47, 0xe4, 0x98, 0xba, 0x35, 0x79, 0x2c, 0x9f, 0x05, 0x9a,
	0x84, 0x21, 0xa3, 0x9c, 0xbb, 0xd3, 0x0a, 0xad, 0xc3, 0xde, 0x4b, 0xd4, 0xb1, 0x50, 0xf8, 0xba,
	0x16, 0xbc, 0x80, 0x6a, 0xc3, 0x50, 0xb2, 0xd4, 0xfd, 0xda, 0x30, 0xec, 0x9d, 0x48, 0x55, 0x83,
	0x71, 0x38, 0x89, 0x2a, 0x95, 0xa4, 0x96, 0x26, 0xc9, 0x54, 0x4e, 0xc3, 0x2a, 0xeb, 0xa6, 0xca,
	0x65, 0xa9, 0x12, 0xa2, 0x4c, 0x55, 0xf6, 0xb6, 0xa4, 0xaa, 0x6d, 0x1a, 0xd1, 0x3f, 0x57, 0xa5,
	0x79, 0xa0, 0x24, 0x19, 0xcf, 0x57, 0x07, 0x2d, 0x66, 0x8e, 0xed, 0x88, 0xae, 0x67, 0x46, 0x95,
	0xf6, 0xe4, 0x74, 0xf0, 0x6e, 0x3b, 0xed, 0x89, 0x78, 0xc6, 0x5d, 0x34, 0xaf, 0xdb, 0x3e, 0x10,
	0x5f, 0x29, 0x23, 0xf2, 0x47, 0xe2, 0x57, 0x87, 0x84, 0x1f, 0x6a, 0x33, 0xe4, 0x33, 0x5e, 0x44,
	0x0d, 0x32, 0xe2, 0x67, 0x94, 0xb9, 0x33, 0x5d, 0x67, 0x75, 0xc6, 0xd7, 0x11, 0x6e, 0xa3, 0xb9,
	0x90, 0x24, 0x64, 0xc0, 0x69, 0xe8, 0x36, 0x24, 0x3e, 0x8b, 0x7b, 0x5d, 0xe4, 0xc1, 0x8a, 0xb3,
	0xa2, 0xbe, 0xa8, 0xa2, 0x94, 0xc1, 0xff, 0xb6, 0x28, 0x5b, 0x01, 0x18, 0xd5, 0x39, 0x89, 0x12,
	0x77, 0x56, 0x9e, 0xca, 0x67, 0x2d, 0x1c, 0x50, 0x95, 0x09, 0x7f, 0x23, 0x75, 0xab, 0x86, 0xdd,
	0x43, 0xb7, 0x66, 0x02, 0xf2, 0x64, 0x4c, 0xdf, 0x6a, 0xb9, 0xbe, 0xfb, 0xaa, 0x20, 0x5f, 0xde,
	0xe4, 0x09, 0x2d, 0x5a, 0x44, 0x8d, 0xe4, 0xa3, 0xec, 0xab, 0x72, 0x47, 0x47, 0x22, 0xcb, 0x88,
	0x26, 0x67, 0x31, 0x3b, 0x4a, 0xff, 0xfd, 0x3a, 0x14, 0x59, 0x3e, 0xb1, 0xf8, 0x58, 0x1a, 0xd6,
	0xf4, 0xe5, 0x73, 0xfe, 0xae, 0x34, 0x8c, 0xbb, 0x82, 0x5b, 0x68, 0x86, 0x07, 0x31, 0xa3, 0xda,
	0x49, 0x15, 0x08, 0x56, 0x35, 0xbe, 0xdc, 0x39, 0xc5, 0xaa, 0x22, 0x81, 0xde, 0x8f, 0xe2, 0xe0,
	0xc8, 0x6d, 0x2a, 0xb4, 0x0c, 0x64, 0x8e, 0x84, 0x1c, 0x50, 0x17, 0xe9, 0x1c, 0x22, 0xc0, 0x9b,
	0xa8, 0x21, 0xc7, 0x1c, 0x77, 0xe7, 0xbb, 0xce, 0xea, 0xfc, 0xc6, 0x52, 0x3f, 0x3f, 0x34, 0xfb,
	0xa6, 0x6f, 0x1a, 0x6a, 0xfc, 0xf9, 0x0c, 0xdb, 0x8a, 0xce, 0xaa, 0x36, 0xff, 0x77, 0x76, 0x42,
	0x67, 0x01, 0xdb, 0xc0, 0xdb, 0x71, 0x0f, 0x63, 0x8d, 0xdb, 0x01, 0x33, 0xbd, 0x45, 0x0f, 0xb3,
	0x2e, 0x7f, 0xd0, 0x4b, 0xac, 0x84, 0xc4, 0xbe, 0x8f, 0x96, 0xd0, 0xd3, 0x5b, 0x89, 0x0a, 0x2c,
	0xaa, 0xe2, 0xbf, 0xc0, 0x62, 0x26, 0xca, 0x58, 0xd6, 0x24, 0x8b, 0xaa, 0xb6, 0x9a, 0x45, 0xe7,
	0x32, 0xe1, 0x69, 0xae, 0x8d, 0x5f, 0x4d, 0x34, 0xbd, 0xc3, 0x0f, 0x70, 0x84, 0x5a, 0xe0, 0x1a,
	0x7f, 0x56, 0x68, 0x34, 0xbc, 0x8a, 0xdb, 0x6b, 0x77, 0x82, 0x65, 0xb3, 0x2f, 0x42, 0x2d, 0x70,
	0x3d, 0xdf, 0x66, 0x83, 0x60, 0x00, 0x5b, 0xd9, 0xe6, 0x15, 0x6c, 0xe0, 0xda, 0xbd, 0xcd, 0x06,
	0xc1, 0x00, 0xb6, 0xb2, 0xfd, 0x8b, 0x87, 0xe8, 0x11, 0xb4, 0x7b, 0x57, 0x2c, 0x0e, 0x19, 0xa8,
	0xf6, 0x8b, 0xbb, 0xa0, 0xf2, 0x54, 0xd0, 0x46, 0x5c, 0xb1, 0xd8, 0x53, 0x45, 0x55, 0xb2, 0xc7,
	0x04, 0x15, 0xb4, 0xc4, 0x56, 0x2c, 0xde, 0x54, 0x51, 0x95, 0x2c, 0xb2, 0x1b, 0x03, 0xcd, 0x89,
	0x60, 0x33, 0xd0, 0x40, 0x59, 0x0d, 0x04, 0xa7, 0xc2, 0x8d, 0x81, 0x55, 0x54, 0x00, 0xca, 0x6a,
	0xa0, 0x95, 0x0a, 0x9a, 0x73, 0x36, 0x03, 0xab, 0xa8, 0x4a, 0x66, 0x1d, 0xde, 0x45, 0x0b, 0x85,
	0x41, 0xd7, 0xb1, 0xb8, 0x92, 0x02, 0xda, 0xcf, 0x2b, 0x00, 0xf9, 0xdc, 0x85, 0xf1, 0xd6, 0xb1,
	0xd8, 0x50, 0x92, 0x1b, 0x9e, 0x6b, 0x22, 0x77, 0x61, 0xa8, 0x75, 0x2c, 0x75, 0x97, 0xe4, 0x86,
	0xe7, 0xdc, 0xeb, 0xfe, 0xf7, 0x2b, 0xcf, 0xb9, 0xbc, 0xf2, 0x9c, 0x9f, 0x57, 0x9e, 0xf3, 0xf9,
	0xda, 0x9b, 0xba, 0xbc, 0xf6, 0xa6, 0x7e, 0x5c, 0x7b, 0x53, 0xbb, 0xad, 0x6d, 0xf1, 0x82, 0x73,
	0x7e, 0xf3, 0x8a, 0x73, 0x31, 0xa6, 0x7c, 0xbf, 0x21, 0x5f, 0x70, 0x36, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x00, 0xbb, 0x65, 0x2d, 0x8e, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateAllowedOracles(ctx context.Context, in *MsgCreateAllowedOracles, opts ...grpc.CallOption) (*MsgCreateAllowedOraclesResponse, error)
	UpdateAllowedOracles(ctx context.Context, in *MsgUpdateAllowedOracles, opts ...grpc.CallOption) (*MsgUpdateAllowedOraclesResponse, error)
	DeleteAllowedOracles(ctx context.Context, in *MsgDeleteAllowedOracles, opts ...grpc.CallOption) (*MsgDeleteAllowedOraclesResponse, error)
	CreateMinerResponse(ctx context.Context, in *MsgCreateMinerResponse, opts ...grpc.CallOption) (*MsgCreateMinerResponseResponse, error)
	UpdateMinerResponse(ctx context.Context, in *MsgUpdateMinerResponse, opts ...grpc.CallOption) (*MsgUpdateMinerResponseResponse, error)
	DeleteMinerResponse(ctx context.Context, in *MsgDeleteMinerResponse, opts ...grpc.CallOption) (*MsgDeleteMinerResponseResponse, error)
	CreateRequestRecord(ctx context.Context, in *MsgCreateRequestRecord, opts ...grpc.CallOption) (*MsgCreateRequestRecordResponse, error)
	UpdateRequestRecord(ctx context.Context, in *MsgUpdateRequestRecord, opts ...grpc.CallOption) (*MsgUpdateRequestRecordResponse, error)
	DeleteRequestRecord(ctx context.Context, in *MsgDeleteRequestRecord, opts ...grpc.CallOption) (*MsgDeleteRequestRecordResponse, error)
	CreateTreasury(ctx context.Context, in *MsgCreateTreasury, opts ...grpc.CallOption) (*MsgCreateTreasuryResponse, error)
	UpdateTreasury(ctx context.Context, in *MsgUpdateTreasury, opts ...grpc.CallOption) (*MsgUpdateTreasuryResponse, error)
	DeleteTreasury(ctx context.Context, in *MsgDeleteTreasury, opts ...grpc.CallOption) (*MsgDeleteTreasuryResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateAllowedOracles(ctx context.Context, in *MsgCreateAllowedOracles, opts ...grpc.CallOption) (*MsgCreateAllowedOraclesResponse, error) {
	out := new(MsgCreateAllowedOraclesResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/CreateAllowedOracles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAllowedOracles(ctx context.Context, in *MsgUpdateAllowedOracles, opts ...grpc.CallOption) (*MsgUpdateAllowedOraclesResponse, error) {
	out := new(MsgUpdateAllowedOraclesResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/UpdateAllowedOracles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteAllowedOracles(ctx context.Context, in *MsgDeleteAllowedOracles, opts ...grpc.CallOption) (*MsgDeleteAllowedOraclesResponse, error) {
	out := new(MsgDeleteAllowedOraclesResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/DeleteAllowedOracles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateMinerResponse(ctx context.Context, in *MsgCreateMinerResponse, opts ...grpc.CallOption) (*MsgCreateMinerResponseResponse, error) {
	out := new(MsgCreateMinerResponseResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/CreateMinerResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMinerResponse(ctx context.Context, in *MsgUpdateMinerResponse, opts ...grpc.CallOption) (*MsgUpdateMinerResponseResponse, error) {
	out := new(MsgUpdateMinerResponseResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/UpdateMinerResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMinerResponse(ctx context.Context, in *MsgDeleteMinerResponse, opts ...grpc.CallOption) (*MsgDeleteMinerResponseResponse, error) {
	out := new(MsgDeleteMinerResponseResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/DeleteMinerResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRequestRecord(ctx context.Context, in *MsgCreateRequestRecord, opts ...grpc.CallOption) (*MsgCreateRequestRecordResponse, error) {
	out := new(MsgCreateRequestRecordResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/CreateRequestRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRequestRecord(ctx context.Context, in *MsgUpdateRequestRecord, opts ...grpc.CallOption) (*MsgUpdateRequestRecordResponse, error) {
	out := new(MsgUpdateRequestRecordResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/UpdateRequestRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRequestRecord(ctx context.Context, in *MsgDeleteRequestRecord, opts ...grpc.CallOption) (*MsgDeleteRequestRecordResponse, error) {
	out := new(MsgDeleteRequestRecordResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/DeleteRequestRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTreasury(ctx context.Context, in *MsgCreateTreasury, opts ...grpc.CallOption) (*MsgCreateTreasuryResponse, error) {
	out := new(MsgCreateTreasuryResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/CreateTreasury", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTreasury(ctx context.Context, in *MsgUpdateTreasury, opts ...grpc.CallOption) (*MsgUpdateTreasuryResponse, error) {
	out := new(MsgUpdateTreasuryResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/UpdateTreasury", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTreasury(ctx context.Context, in *MsgDeleteTreasury, opts ...grpc.CallOption) (*MsgDeleteTreasuryResponse, error) {
	out := new(MsgDeleteTreasuryResponse)
	err := c.cc.Invoke(ctx, "/dhpc.request.Msg/DeleteTreasury", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateAllowedOracles(context.Context, *MsgCreateAllowedOracles) (*MsgCreateAllowedOraclesResponse, error)
	UpdateAllowedOracles(context.Context, *MsgUpdateAllowedOracles) (*MsgUpdateAllowedOraclesResponse, error)
	DeleteAllowedOracles(context.Context, *MsgDeleteAllowedOracles) (*MsgDeleteAllowedOraclesResponse, error)
	CreateMinerResponse(context.Context, *MsgCreateMinerResponse) (*MsgCreateMinerResponseResponse, error)
	UpdateMinerResponse(context.Context, *MsgUpdateMinerResponse) (*MsgUpdateMinerResponseResponse, error)
	DeleteMinerResponse(context.Context, *MsgDeleteMinerResponse) (*MsgDeleteMinerResponseResponse, error)
	CreateRequestRecord(context.Context, *MsgCreateRequestRecord) (*MsgCreateRequestRecordResponse, error)
	UpdateRequestRecord(context.Context, *MsgUpdateRequestRecord) (*MsgUpdateRequestRecordResponse, error)
	DeleteRequestRecord(context.Context, *MsgDeleteRequestRecord) (*MsgDeleteRequestRecordResponse, error)
	CreateTreasury(context.Context, *MsgCreateTreasury) (*MsgCreateTreasuryResponse, error)
	UpdateTreasury(context.Context, *MsgUpdateTreasury) (*MsgUpdateTreasuryResponse, error)
	DeleteTreasury(context.Context, *MsgDeleteTreasury) (*MsgDeleteTreasuryResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateAllowedOracles(ctx context.Context, req *MsgCreateAllowedOracles) (*MsgCreateAllowedOraclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAllowedOracles not implemented")
}
func (*UnimplementedMsgServer) UpdateAllowedOracles(ctx context.Context, req *MsgUpdateAllowedOracles) (*MsgUpdateAllowedOraclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAllowedOracles not implemented")
}
func (*UnimplementedMsgServer) DeleteAllowedOracles(ctx context.Context, req *MsgDeleteAllowedOracles) (*MsgDeleteAllowedOraclesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllowedOracles not implemented")
}
func (*UnimplementedMsgServer) CreateMinerResponse(ctx context.Context, req *MsgCreateMinerResponse) (*MsgCreateMinerResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMinerResponse not implemented")
}
func (*UnimplementedMsgServer) UpdateMinerResponse(ctx context.Context, req *MsgUpdateMinerResponse) (*MsgUpdateMinerResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMinerResponse not implemented")
}
func (*UnimplementedMsgServer) DeleteMinerResponse(ctx context.Context, req *MsgDeleteMinerResponse) (*MsgDeleteMinerResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMinerResponse not implemented")
}
func (*UnimplementedMsgServer) CreateRequestRecord(ctx context.Context, req *MsgCreateRequestRecord) (*MsgCreateRequestRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRequestRecord not implemented")
}
func (*UnimplementedMsgServer) UpdateRequestRecord(ctx context.Context, req *MsgUpdateRequestRecord) (*MsgUpdateRequestRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRequestRecord not implemented")
}
func (*UnimplementedMsgServer) DeleteRequestRecord(ctx context.Context, req *MsgDeleteRequestRecord) (*MsgDeleteRequestRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRequestRecord not implemented")
}
func (*UnimplementedMsgServer) CreateTreasury(ctx context.Context, req *MsgCreateTreasury) (*MsgCreateTreasuryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTreasury not implemented")
}
func (*UnimplementedMsgServer) UpdateTreasury(ctx context.Context, req *MsgUpdateTreasury) (*MsgUpdateTreasuryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTreasury not implemented")
}
func (*UnimplementedMsgServer) DeleteTreasury(ctx context.Context, req *MsgDeleteTreasury) (*MsgDeleteTreasuryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTreasury not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateAllowedOracles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAllowedOracles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAllowedOracles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/CreateAllowedOracles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAllowedOracles(ctx, req.(*MsgCreateAllowedOracles))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAllowedOracles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAllowedOracles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAllowedOracles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/UpdateAllowedOracles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAllowedOracles(ctx, req.(*MsgUpdateAllowedOracles))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteAllowedOracles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAllowedOracles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAllowedOracles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/DeleteAllowedOracles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAllowedOracles(ctx, req.(*MsgDeleteAllowedOracles))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateMinerResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateMinerResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateMinerResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/CreateMinerResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateMinerResponse(ctx, req.(*MsgCreateMinerResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMinerResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMinerResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMinerResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/UpdateMinerResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMinerResponse(ctx, req.(*MsgUpdateMinerResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMinerResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMinerResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMinerResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/DeleteMinerResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMinerResponse(ctx, req.(*MsgDeleteMinerResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRequestRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRequestRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRequestRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/CreateRequestRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRequestRecord(ctx, req.(*MsgCreateRequestRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRequestRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRequestRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRequestRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/UpdateRequestRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRequestRecord(ctx, req.(*MsgUpdateRequestRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRequestRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRequestRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRequestRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/DeleteRequestRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRequestRecord(ctx, req.(*MsgDeleteRequestRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTreasury_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTreasury)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTreasury(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/CreateTreasury",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTreasury(ctx, req.(*MsgCreateTreasury))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTreasury_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTreasury)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTreasury(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/UpdateTreasury",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTreasury(ctx, req.(*MsgUpdateTreasury))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTreasury_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTreasury)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTreasury(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dhpc.request.Msg/DeleteTreasury",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTreasury(ctx, req.(*MsgDeleteTreasury))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dhpc.request.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAllowedOracles",
			Handler:    _Msg_CreateAllowedOracles_Handler,
		},
		{
			MethodName: "UpdateAllowedOracles",
			Handler:    _Msg_UpdateAllowedOracles_Handler,
		},
		{
			MethodName: "DeleteAllowedOracles",
			Handler:    _Msg_DeleteAllowedOracles_Handler,
		},
		{
			MethodName: "CreateMinerResponse",
			Handler:    _Msg_CreateMinerResponse_Handler,
		},
		{
			MethodName: "UpdateMinerResponse",
			Handler:    _Msg_UpdateMinerResponse_Handler,
		},
		{
			MethodName: "DeleteMinerResponse",
			Handler:    _Msg_DeleteMinerResponse_Handler,
		},
		{
			MethodName: "CreateRequestRecord",
			Handler:    _Msg_CreateRequestRecord_Handler,
		},
		{
			MethodName: "UpdateRequestRecord",
			Handler:    _Msg_UpdateRequestRecord_Handler,
		},
		{
			MethodName: "DeleteRequestRecord",
			Handler:    _Msg_DeleteRequestRecord_Handler,
		},
		{
			MethodName: "CreateTreasury",
			Handler:    _Msg_CreateTreasury_Handler,
		},
		{
			MethodName: "UpdateTreasury",
			Handler:    _Msg_UpdateTreasury_Handler,
		},
		{
			MethodName: "DeleteTreasury",
			Handler:    _Msg_DeleteTreasury_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dhpc/request/tx.proto",
}

func (m *MsgCreateAllowedOracles) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAllowedOracles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAllowedOracles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAllowedOraclesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAllowedOraclesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAllowedOraclesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAllowedOracles) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAllowedOracles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAllowedOracles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAllowedOraclesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAllowedOraclesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAllowedOraclesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAllowedOracles) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAllowedOracles) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAllowedOracles) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAllowedOraclesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAllowedOraclesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAllowedOraclesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DataUsed) > 0 {
		i -= len(m.DataUsed)
		copy(dAtA[i:], m.DataUsed)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DataUsed)))
		i--
		dAtA[i] = 0x32
	}
	if m.Answer != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Answer))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RequestUUID) > 0 {
		i -= len(m.RequestUUID)
		copy(dAtA[i:], m.RequestUUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequestUUID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateMinerResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateMinerResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateMinerResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Salt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Salt))
		i--
		dAtA[i] = 0x38
	}
	if m.Answer != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Answer))
		i--
		dAtA[i] = 0x28
	}
	if len(m.RequestUUID) > 0 {
		i -= len(m.RequestUUID)
		copy(dAtA[i:], m.RequestUUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RequestUUID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMinerResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMinerResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMinerResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMinerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMinerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMinerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMinerResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMinerResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMinerResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRequestRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequestRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequestRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Miners != nil {
		{
			size, err := m.Miners.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Stage != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x50
	}
	if m.Block != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Block))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Oracle) > 0 {
		i -= len(m.Oracle)
		copy(dAtA[i:], m.Oracle)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Oracle)))
		i--
		dAtA[i] = 0x42
	}
	if m.Score != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Network) > 0 {
		i -= len(m.Network)
		copy(dAtA[i:], m.Network)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Network)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TXhash) > 0 {
		i -= len(m.TXhash)
		copy(dAtA[i:], m.TXhash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TXhash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRequestRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequestRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequestRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRequestRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRequestRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRequestRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Miners != nil {
		{
			size, err := m.Miners.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Stage != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Stage))
		i--
		dAtA[i] = 0x50
	}
	if m.Block != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Block))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Oracle) > 0 {
		i -= len(m.Oracle)
		copy(dAtA[i:], m.Oracle)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Oracle)))
		i--
		dAtA[i] = 0x42
	}
	if m.Score != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Network) > 0 {
		i -= len(m.Network)
		copy(dAtA[i:], m.Network)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Network)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TXhash) > 0 {
		i -= len(m.TXhash)
		copy(dAtA[i:], m.TXhash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TXhash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRequestRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRequestRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRequestRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRequestRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRequestRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRequestRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UUID) > 0 {
		i -= len(m.UUID)
		copy(dAtA[i:], m.UUID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UUID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRequestRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRequestRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRequestRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTreasury) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTreasury) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTreasury) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTreasuryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTreasuryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTreasuryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTreasury) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTreasury) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTreasury) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTreasuryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTreasuryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTreasuryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTreasury) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTreasury) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTreasury) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTreasuryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTreasuryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTreasuryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateAllowedOracles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAllowedOraclesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateAllowedOracles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAllowedOraclesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteAllowedOracles) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteAllowedOraclesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequestUUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Answer != 0 {
		n += 1 + sovTx(uint64(m.Answer))
	}
	l = len(m.DataUsed)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateMinerResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RequestUUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Answer != 0 {
		n += 1 + sovTx(uint64(m.Answer))
	}
	if m.Salt != 0 {
		n += 1 + sovTx(uint64(m.Salt))
	}
	return n
}

func (m *MsgUpdateMinerResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteMinerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteMinerResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRequestRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TXhash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Network)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovTx(uint64(m.Score))
	}
	l = len(m.Oracle)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Block != 0 {
		n += 1 + sovTx(uint64(m.Block))
	}
	if m.Stage != 0 {
		n += 1 + sovTx(uint64(m.Stage))
	}
	if m.Miners != nil {
		l = m.Miners.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRequestRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateRequestRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TXhash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Network)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovTx(uint64(m.Score))
	}
	l = len(m.Oracle)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Block != 0 {
		n += 1 + sovTx(uint64(m.Block))
	}
	if m.Stage != 0 {
		n += 1 + sovTx(uint64(m.Stage))
	}
	if m.Miners != nil {
		l = m.Miners.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRequestRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRequestRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UUID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteRequestRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTreasury) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTreasuryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateTreasury) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTreasuryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTreasury) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteTreasuryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateAllowedOracles) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAllowedOracles: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAllowedOracles: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAllowedOraclesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAllowedOraclesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAllowedOraclesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAllowedOracles) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAllowedOracles: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAllowedOracles: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAllowedOraclesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAllowedOraclesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAllowedOraclesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAllowedOracles) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAllowedOracles: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAllowedOracles: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAllowedOraclesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAllowedOraclesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAllowedOraclesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Answer", wireType)
			}
			m.Answer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Answer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataUsed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataUsed = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateMinerResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateMinerResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateMinerResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestUUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestUUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Answer", wireType)
			}
			m.Answer = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Answer |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
			}
			m.Salt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Salt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMinerResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMinerResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMinerResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMinerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMinerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMinerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMinerResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMinerResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMinerResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRequestRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequestRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequestRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TXhash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TXhash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Network = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oracle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oracle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Block", wireType)
			}
			m.Block = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Block |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Miners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Miners == nil {
				m.Miners = &MinerResponse{}
			}
			if err := m.Miners.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRequestRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequestRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequestRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRequestRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRequestRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRequestRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TXhash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TXhash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Network = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oracle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oracle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Block", wireType)
			}
			m.Block = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Block |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			m.Stage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Miners", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Miners == nil {
				m.Miners = &MinerResponse{}
			}
			if err := m.Miners.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRequestRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRequestRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRequestRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRequestRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRequestRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRequestRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UUID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UUID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRequestRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRequestRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRequestRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTreasury) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTreasury: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTreasury: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTreasuryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTreasuryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTreasuryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTreasury) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTreasury: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTreasury: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTreasuryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTreasuryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTreasuryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTreasury) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTreasury: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTreasury: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTreasuryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTreasuryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTreasuryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
